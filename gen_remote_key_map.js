import fs from 'fs';

import * as StoryLine from './src/js/story_line.js';
import {KEY_MAP, REV_KEY_MAP} from './src/js/remote_key_map.js';

const STORY_FILE = 'static/story-lines/regular.json';

const content = fs.readFileSync(STORY_FILE);

const obj = JSON.parse(content);

const missions = StoryLine.loadStoryLineFromObject(obj);

let nextIndex = 1;

for (const key in KEY_MAP) {
  const index = parseInt(key);
  nextIndex = Math.max(index + 1, nextIndex);
}

function addKeyIfNotExists(key) {
  if (key in REV_KEY_MAP) {
    console.log(`exists: ${REV_KEY_MAP[key]} -> ${key}`);
  } else {
    const index = `0000000000${nextIndex}`.substr(-10);
    nextIndex += 1;
    KEY_MAP[index] = key;
    console.log(`new: ${index} -> ${key}`);
  }
}

for (const missionId in missions) {
  const mission = missions[missionId];

  if (!mission.steps) continue;

  for (const stepId in mission.steps) {
    let key = `MISSION/${missionId}/${stepId}/done`;
    addKeyIfNotExists(key);

    const step = mission.steps[stepId];
    if (!step.dialog) continue;

    for (const dialogItem of step.dialog.dialogItems) {
      if (dialogItem instanceof StoryLine.DialogItemSelect) {
        for (const idx in dialogItem.choices) {
          const value = dialogItem.choices[idx].value || idx;
          key = `RESPONSE/${dialogItem.storeKey}/${value}`
          addKeyIfNotExists(key);
        }
      }
    }
  }
}

fs.writeFileSync('./src/js/remote_key_map.js',
  `// Generated by gen_remote_key_map.py

export const KEY_MAP = ${JSON.stringify(KEY_MAP)};

export const REV_KEY_MAP = {};
for (const key in KEY_MAP) {
  REV_KEY_MAP[KEY_MAP[key]] = key;
}
`);
